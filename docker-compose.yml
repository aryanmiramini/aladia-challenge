# Aladia NestJS Microservices Docker Compose

version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_DATABASE: aladia
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - aladia-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  authentication:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: auth-service
    restart: always
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/aladia
      - AUTH_SERVICE_HOST=0.0.0.0
      - AUTH_SERVICE_PORT=3001
    command: node dist/apps/authentication/main.js
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - aladia-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: api-gateway
    restart: always
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/aladia
      - AUTH_SERVICE_HOST=authentication
      - AUTH_SERVICE_PORT=3001
      - GATEWAY_PORT=3000
    command: node dist/apps/gateway/main.js
    ports:
      - "3000:3000"
    depends_on:
      authentication:
        condition: service_healthy
    networks:
      - aladia-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mongodb_data:
    driver: local

networks:
  aladia-network:
    driver: bridge 